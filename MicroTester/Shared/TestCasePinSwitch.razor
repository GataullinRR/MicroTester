@inject IMicroTesterClient MicroTester;
@inject IEventHub EventHub;

@if (TestCase.IsPinned)
{
    <InlineButton @onclick="() => SetPinnedStateAsync(false)">Unpin</InlineButton>
}
else
{
    <InlineButton @onclick="() => SetPinnedStateAsync(true)">Pin</InlineButton>
}

@code {
    [Parameter]
    public TestCase TestCase { get; set; }

    [Parameter]
    public Func<Task> PinStateChangedAsync { get; set; }

    private async Task SetPinnedStateAsync(bool isPinned)
    {
        TestCase.IsPinned = isPinned;
        await MicroTester.UpdateCasesAsync(new UpdateCasesRequest(TestCase));
        await EventHub.FireCasesStateChangedAsync();
    }
}
